#!/usr/bin/perl
use common::sense;
use utf8::all;
use Encode;
use JSON qw(decode_json encode_json);
use File::Path qw(make_path);
use File::Slurp;
use Switch;
use Klompen;
use Klompen::Post;
use Klompen::Archive;

# Read configuration file
{
    my $config_file = './klompen.cfg';
    $config_file = $ARGV[0] if(defined($ARGV[0]));

    Klompen::config_set(decode_json(encode("utf8", File::Slurp::read_file($config_file))));
}

# Load previously saved state
# (This includes: Highest ID seen, list of tags.)
Klompen::read_state;

# Klompen::list_source_posts croaks if it can't open the directory, or
# if there are no files; so there's no real need to error-check here.q
# Also, sort the posts, so that (If you do what I do) name the posts
# by date (YYYY-MM-DD), the later ones are processed last and get the
# benefits of a full tag-list.
my @tmp = Klompen::list_source_posts();
@tmp = sort { $a cmp $b } @tmp;

# Create the output directory.
make_path(Klompen::output_dir(), Klompen::archive_path(), Klompen::author_path());

# Go through each post, generating them individually. :)
foreach (@tmp){
    my $post = $_;
    if(Klompen::verbose_p()){
	print STDERR "Generating post \"$post\": ";
	switch(Klompen::Post::generate(Klompen::source_path($post))){
	    case -1 { print STDERR "FAILED!\n"};
	    case  0 { print STDERR "Not required.\n"};
	    case  1 { print STDERR "Done.\n"};
	}
    }
}

# Generate the index/archive pages (List of posts, in reverse
# chronological order.) This also includes the tag-archives, which are
# lists of posts (again in reverse-chronological order) using a
# certain tag.
Klompen::Archive::generate();
Klompen::Archive::generate_tag_archive();
Klompen::Archive::generate('index');
Klompen::Archive::generate_rss();

# Write out our state.
Klompen::write_state;
